#include <stdio.h>

#define max 10

int main() {
    int n, at[max], bt[max], pr[max];
    int rt[max], wt[max], tat[max];
    int is_completed[max] = {0};
    int completed = 0, time = 0;
    float avg_wt = 0, avg_tat = 0;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    printf("Enter Arrival Time, Burst Time, and Priority for each process:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d:\n", i + 1);
        printf("Arrival Time: ");
        scanf("%d", &at[i]);
        printf("Burst Time: ");
        scanf("%d", &bt[i]);
        printf("Priority: ");
        scanf("%d", &pr[i]);
        rt[i] = bt[i];
    }

    while (completed != n) {
        int min_pr = 1e9;
        int min = -1;

        for (int i = 0; i < n; i++) {
            if (at[i] <= time && !is_completed[i] && pr[i] < min_pr) {
                min_pr = pr[i];
                min = i;
            }
        }

        if (min == -1) {
            time++;
            continue;
        }

        rt[min]--;
        time++;

        if (rt[min] == 0) {
            completed++;
            is_completed[min] = 1;
            tat[min] = time - at[min];
            wt[min] = tat[min] - bt[min];
        }
    }

    printf("\nPID\tArrival\tBurst\tPriority\tWaiting\tTurnaround\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\t\t%d\t\t%d\n", i + 1, at[i], bt[i], pr[i], wt[i], tat[i]);
        avg_wt += wt[i];
        avg_tat += tat[i];
    }

    avg_wt /= n;
    avg_tat /= n;

    printf("\nAverage Waiting Time: %.2f\n", avg_wt);
    printf("Average Turnaround Time: %.2f\n", avg_tat);

    return 0;
}
