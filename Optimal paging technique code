#include <stdio.h>
void printFrames(int frames[], int frameCount) {
    for (int i = 0; i < frameCount; i++) {
        if (frames[i] == -1) {
            printf(" - ");
        } else {
            printf(" %d ", frames[i]);
        }
    }
    printf("\n");
}

int findOptimalPage(int frames[], int frameCount, int pages[], int currentIndex, int pageCount) {
    int farthest = currentIndex, index = -1;
    for (int i = 0; i < frameCount; i++) {
        int j;
        for (j = currentIndex + 1; j < pageCount; j++) {
            if (frames[i] == pages[j]) {
                if (j > farthest) {
                    farthest = j;
                    index = i;
                }
                break;
            }
        }
        if (j == pageCount) {
            return i;
        }
    }
    return (index == -1) ? 0 : index;
}

int main() {
    int pageCount, frameCount;

    printf("Enter the number of pages: ");
    scanf("%d", &pageCount);
    int pages[pageCount];
    printf("Enter the page reference sequence:\n");
    for (int i = 0; i < pageCount; i++) {
        scanf("%d", &pages[i]);
    }

    printf("Enter the number of frames: ");
    scanf("%d", &frameCount);
    int frames[frameCount];

    for (int i = 0; i < frameCount; i++) {
        frames[i] = -1; 
    }

    int pageFaults = 0;
    printf("\nPage Replacement Process:\n");

    for (int i = 0; i < pageCount; i++) {
        bool pageHit = false;
        for (int j = 0; j < frameCount; j++) {
            if (frames[j] == pages[i]) {
                pageHit = true;
                break;
            }
        }

        if (!pageHit) {
            pageFaults++;
            int replacementIndex = -1;
            if (i < frameCount) {
                replacementIndex = i;
            } else {
                replacementIndex = findOptimalPage(frames, frameCount, pages, i, pageCount);
            }
            frames[replacementIndex] = pages[i];
        }

        printFrames(frames, frameCount);
    }

    printf("\nTotal Page Faults: %d\n", pageFaults);

    return 0;
}
